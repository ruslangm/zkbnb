syntax = "v1"

info(
	date: "2022-5-1"
	desc: "Public APIs for zkbnb"
	version: "1.0"
)

/* ========================= root =========================*/

type ResultCode {
	Code int32 `json:"code"`
}

type (
	Status {
		Status    uint32 `json:"status"`
		NetworkId uint32 `json:"network_id"`
	}
)

@server(
	group: root
)

service server-api {
	@doc "Get status of zkbnb"
	@handler GetStatus
	get / returns (Status)
}

type ReqGetRange {
	Offset uint32 `form:"offset,range=[0:100000]"`
	Limit  uint32 `form:"limit,range=[1:100]"`
}

type ReqGetRangeWithFromHash {
	Offset   uint32 `form:"offset,range=[0:100000]"`
	Limit    uint32 `form:"limit,range=[1:100]"`
	FromHash string `form:"from_hash,optional"`
}

/* ========================= Account =========================*/

type (
	AccountAsset {
		Id      uint32 `json:"id"`
		Name    string `json:"name"`
		Balance string `json:"balance"`
		Price   string `json:"price"`
	}

	Account {
		ResultCode
		Status          uint32          `json:"status"`
		Index           int64           `json:"index"`
		L1Address       string          `json:"l1_address"`
		Pk              string          `json:"pk"`
		Nonce           int64           `json:"nonce"`
		Assets          []*AccountAsset `json:"assets"`
		TotalAssetValue string          `json:"total_asset_value"`
	}

	SimpleAccount {
		Index     int64  `json:"index"`
		L1Address string `json:"l1_address"`
		Pk        string `json:"pk"`
	}

	Accounts {
		ResultCode
		Total    uint32           `json:"total"`
		Accounts []*SimpleAccount `json:"accounts"`
	}
)

type (
	ReqGetAccount {
		By    string `form:"by,options=index|l1_address"`
		Value string `form:"value"`
	}
)

@server(
	group: account
)

service server-api {
	@doc "Get accounts"
	@handler GetAccounts
	get /api/v1/accounts (ReqGetRange) returns (Accounts)
	
	@doc "Get account by account's l1_address, index"
	@handler GetAccount
	get /api/v1/account (ReqGetAccount) returns (Account)
}

/* ========================= Asset =========================*/

type (
	Asset {
		ResultCode
		Id         uint32 `json:"id"`
		Name       string `json:"name"`
		Decimals   uint32 `json:"decimals"`
		Symbol     string `json:"symbol"`
		Address    string `json:"address"`
		Price      string `json:"price"`
		IsGasAsset uint32 `json:"is_gas_asset"`
		Icon       string `json:"icon"`
	}

	Assets {
		ResultCode
		Total  uint32   `json:"total"`
		Assets []*Asset `json:"assets"`
	}
)

type (
	ReqGetAsset {
		By    string `form:"by,options=id|symbol"`
		Value string `form:"value"`
	}
)

@server(
	group: asset
)

service server-api {
	@doc "Get assets"
	@handler GetAssets
	get /api/v1/assets (ReqGetRange) returns (Assets)
	
	@doc "Get asset"
	@handler GetAsset
	get /api/v1/asset (ReqGetAsset) returns (Asset)
}

/* ========================= Block =========================*/

type (
	Block {
		ResultCode
		Commitment                      string `json:"commitment"`
		Height                          int64  `json:"height"`
		StateRoot                       string `json:"state_root"`
		PriorityOperations              int64  `json:"priority_operations"`
		PendingOnChainOperationsHash    string `json:"pending_on_chain_operations_hash"`
		PendingOnChainOperationsPubData string `json:"pending_on_chain_operations_pub_data"`
		CommittedTxHash                 string `json:"committed_tx_hash"`
		CommittedAt                     int64  `json:"committed_at"`
		VerifiedTxHash                  string `json:"verified_tx_hash"`
		VerifiedAt                      int64  `json:"verified_at"`
		Txs                             []*Tx  `json:"txs"`
		Status                          int64  `json:"status"`
		Size                            uint16 `json:"size"`
	}

	Blocks {
		ResultCode
		Total  uint32   `json:"total"`
		Blocks []*Block `json:"blocks"`
	}

	CurrentHeight {
		ResultCode
		Height int64 `json:"height"`
	}
)

type (
	ReqGetBlock {
		By    string `form:"by,options=commitment|height"`
		Value string `form:"value"`
	}
)

type (
	ReqAccountParam {
		By           string `form:"by,optional"`
		Value        string `form:"value,optional"`
		AccountIndex int64  `form:"account_index,optional"`
	}
)

@server(
	group: block
)

service server-api {
	@doc "Get blocks"
	@handler GetBlocks
	get /api/v1/blocks (ReqGetRange) returns (Blocks)
	
	@doc "Get block by its height or commitment"
	@handler GetBlock
	get /api/v1/block (ReqGetBlock) returns (Block)
	
	@handler GetCurrentHeight
	get /api/v1/currentHeight returns (CurrentHeight)
}

/* ========================= Info =========================*/

type (
	ContractAddress {
		Name    string `json:"name"`
		Address string `json:"address"`
	}

	Layer2BasicInfo {
		ResultCode
		BlockCommitted            int64             `json:"block_committed"`
		BlockVerified             int64             `json:"block_verified"`
		TotalTransactionCount     int64             `json:"total_transaction_count"`
		YesterdayTransactionCount int64             `json:"yesterday_transaction_count"`
		TodayTransactionCount     int64             `json:"today_transaction_count"`
		YesterdayActiveUserCount  int64             `json:"yesterday_active_user_count"`
		TodayActiveUserCount      int64             `json:"today_active_user_count"`
		ContractAddresses         []ContractAddress `json:"contract_addresses"`
	}

	GasFee {
		ResultCode
		GasFee string `json:"gas_fee"`
	}

	ProtocolRate {
		ResultCode
		ProtocolRate string `json:"protocol_rate"`
	}

	GasAccount {
		ResultCode
		Status    int64  `json:"status"`
		Index     int64  `json:"index"`
		L1Address string `json:"l1_address"`
	}

	GasFeeAssets {
		ResultCode
		Assets []Asset `json:"assets"`
	}

	Search {
		ResultCode
		DataType int32 `json:"data_type"`
	}
)

type (
	ReqGetGasFee {
		AssetId uint32 `form:"asset_id"`
		TxType  uint32 `form:"tx_type"`
	}

	ReqSearch {
		Keyword string `form:"keyword"`
	}
)

type (
	Rollback {
		FromBlockHeight int64  `json:"from_block_height"`
		FromTxHash      string `json:"from_tx_hash"`
		ID              uint   `json:"id"`
		CreatedAt       int64  `json:"created_at"`
	}

	ReqGetRollbacks {
		FromBlockHeight int64  `form:"from_block_height"`
		Offset          uint16 `form:"offset,range=[0:100000]"`
		Limit           uint16 `form:"limit,range=[1:100]"`
	}
	Rollbacks {
		ResultCode
		Total     uint32      `json:"total"`
		Rollbacks []*Rollback `json:"rollbacks"`
	}
)

@server(
	group: info
)

service server-api {
	@doc "Get zkbnb general info, including contract address, and count of transactions and active users"
	@handler GetLayer2BasicInfo
	get /api/v1/layer2BasicInfo returns (Layer2BasicInfo)
	
	@doc "Get zkbnb platform fee rate"
	@handler getProtocolRate
	get /api/v1/getProtocolRate returns (ProtocolRate)
	
	@doc "Get gas fee amount for using a specific asset as gas asset"
	@handler GetGasFee
	get /api/v1/gasFee (ReqGetGasFee) returns (GasFee)
	
	@doc "Get supported gas fee assets"
	@handler GetGasFeeAssets
	get /api/v1/gasFeeAssets returns (GasFeeAssets)
	
	@doc "Get gas account, who will charge gas fees for transactions"
	@handler GetGasAccount
	get /api/v1/gasAccount returns (GasAccount)
	
	@doc "Search with a specific keyword"
	@handler Search
	get /api/v1/search (ReqSearch) returns (Search)
	
	@doc "Get rollbacks"
	@handler GetRollbacks
	get /api/v1/rollbacks (ReqGetRollbacks) returns (Rollbacks)
	
}

/* ======================= Transaction =======================*/

type (
	Tx {
		Hash           string `json:"hash"`
		Type           int64  `json:"type,range=[1:64]"`
		Amount         string `json:"amount"`
		Info           string `json:"info"`
		Status         int64  `json:"status"`
		Index          int64  `json:"index"`
		GasFeeAssetId  int64  `json:"gas_fee_asset_id"`
		GasFee         string `json:"gas_fee"`
		NftIndex       int64  `json:"nft_index"`
		CollectionId   int64  `json:"collection_id"`
		AssetId        int64  `json:"asset_id"`
		AssetName      string `json:"asset_name"`
		NativeAddress  string `json:"native_address"`
		ExtraInfo      string `json:"extra_info"`
		Memo           string `json:"memo"`
		AccountIndex   int64  `json:"account_index"`
		L1Address      string `json:"l1_address"`
		Nonce          int64  `json:"nonce"`
		ExpiredAt      int64  `json:"expire_at"`
		BlockHeight    int64  `json:"block_height"`
		CreatedAt      int64  `json:"created_at"`
		VerifyAt       int64  `json:"verify_at"`
		StateRoot      string `json:"state_root"`
		ToAccountIndex int64  `json:"to_account_index"`
		ToL1Address    string `json:"to_l1_address"`
	}

	Txs {
		ResultCode
		Total uint32 `json:"total"`
		Txs   []*Tx  `json:"txs"`
	}

	TxHash {
		ResultCode
		TxHash string `json:"tx_hash"`
	}

	NextNonce {
		ResultCode
		Nonce uint64 `json:"nonce"`
	}

	EnrichedTx {
		ResultCode
		Tx
		CommittedAt int64 `json:"committed_at"`
		VerifiedAt  int64 `json:"verified_at"`
		ExecutedAt  int64 `json:"executed_at"`
	}

	SignBody {
		ResultCode
		SignBody string `json:"sign_body"`
	}
)

type (
	ReqGetBlockTxs {
		By    string `form:"by,options=block_height|block_commitment"`
		Value string `form:"value"`
	}

	ReqGetAccountTxs {
		By     string  `form:"by,options=account_index|l1_address"`
		Value  string  `form:"value"`
		Types  []int64 `form:"types,optional"`
		Offset uint16  `form:"offset,range=[0:100000]"`
		Limit  uint16  `form:"limit,range=[1:100]"`
	}

	ReqGetTx {
		Hash string `form:"hash"`
	}

	ReqSendTx {
		TxType uint32 `form:"tx_type"`
		TxInfo string `form:"tx_info"`
	}

	ReqGetAccountPendingTxs {
		By    string  `form:"by,options=account_index|l1_address"`
		Value string  `form:"value"`
		Types []int64 `form:"types,optional"`
	}

	ReqGetNextNonce {
		AccountIndex uint32 `form:"account_index"`
	}
)

@server(
	group: transaction
)

service server-api {
	@doc "Get transactions which are already packed into blocks"
	@handler GetTxs
	get /api/v1/txs (ReqGetRange) returns (Txs)
	
	@doc "Get transactions in a block"
	@handler GetBlockTxs
	get /api/v1/blockTxs (ReqGetBlockTxs) returns (Txs)
	
	@doc "Get transactions of a specific account"
	@handler GetAccountTxs
	get /api/v1/accountTxs (ReqGetAccountTxs) returns (Txs)
	
	@doc "Get merged transactions(including tx and pool_tx) of a specific account"
	@handler GetMergedAccountTxs
	get /api/v1/mergedAccountTxs (ReqGetAccountTxs) returns (Txs)
	
	@doc "Get transaction by hash"
	@handler GetTx
	get /api/v1/tx (ReqGetTx) returns (EnrichedTx)
	
	@doc "Get pending transactions"
	@handler GetPendingTxs
	get /api/v1/pendingTxs (ReqGetRange) returns (Txs)
	
	@doc "Get executed transactions which previously added to tx pool"
	@handler GetExecutedTxs
	get /api/v1/executedTxs (ReqGetRangeWithFromHash) returns (Txs)
	
	@doc "Get pending transactions of a specific account"
	@handler GetAccountPendingTxs
	get /api/v1/accountPendingTxs (ReqGetAccountPendingTxs) returns (Txs)
	
	@doc "Get next nonce"
	@handler GetNextNonce
	get /api/v1/nextNonce (ReqGetNextNonce) returns (NextNonce)
	
	@doc "Get transaction signature body"
	@handler GetL2SignatureBody
	post /api/v1/l2Signature (ReqSendTx) returns (SignBody)
	
	@doc "Send raw transaction"
	@handler SendTx
	post /api/v1/sendTx (ReqSendTx) returns (TxHash)
}

/* ========================= Nft =========================*/

type (
	MaxOfferId {
		ResultCode
		OfferId uint64 `json:"offer_id"`
	}

	MaxCollectionId {
		ResultCode
		CollectionId int64 `json:"collection_id"`
	}

	Nft {
		Index               int64  `json:"index"`
		CreatorAccountIndex int64  `json:"creator_account_index"`
		CreatorL1Address    string `json:"creator_l1_address"`
		OwnerAccountIndex   int64  `json:"owner_account_index"`
		OwnerL1Address      string `json:"owner_l1_address"`
		ContentHash         string `json:"content_hash"`
		L1Address           string `json:"l1_address"`
		L1TokenId           string `json:"l1_token_id"`
		RoyaltyRate         int64  `json:"royalty_rate"`
		CollectionId        int64  `json:"collection_id"`
		IpfsId              string `json:"ipfs_id"`
	}

	NftEntity {
		ResultCode
		Nft *Nft `json:"nft"`
	}

	Nfts {
		ResultCode
		Total int64  `json:"total"`
		Nfts  []*Nft `json:"nfts"`
	}

	NftIndex {
		ResultCode
		Index  int64  `json:"index"`
		IpfsId string `json:"ipfs_id"`
	}

	History {
		ResultCode
		IpnsId string `json:"ipns_id"`
	}
)

type (
	ReqGetMaxOfferId {
		AccountIndex uint32 `form:"account_index"`
	}
)

type (
	ReqGetMaxCollectionId {
		AccountIndex int64 `form:"account_index"`
	}
)

type (
	ReqGetAccountNfts {
		By     string `form:"by,options=account_index|l1_address"`
		Value  string `form:"value"`
		Offset uint16 `form:"offset,range=[0:100000]"`
		Limit  uint16 `form:"limit,range=[1:100]"`
	}
)

type (
	ReqGetNft {
		NftIndex int64 `form:"nft_index"`
	}
)

type (
	ReqGetNftIndex {
		TxHash string `form:"tx_hash"`
	}
)

type (
	ReqGetNftNextNonce {
		NftIndex int64 `form:"nft_index"`
	}
)

type (
	ReqUpdateNft {
		TxInfo string `form:"tx_info"`
	}
)

@server(
	group: nft
)

service server-api {
	@doc "Get max nft offer id for a specific account"
	@handler GetMaxOfferId
	get /api/v1/maxOfferId (ReqGetMaxOfferId) returns (MaxOfferId)
	
	@doc "Get max nft collection id for a specific account"
	@handler GetMaxCollectionId
	get /api/v1/maxCollectionId (ReqGetMaxCollectionId) returns (MaxCollectionId)
	
	@doc "Get nfts of a specific account"
	@handler GetAccountNfts
	get /api/v1/accountNfts (ReqGetAccountNfts) returns (Nfts)
	
	@doc "Get nft of nft index"
	@handler GetNftByNftIndex
	get /api/v1/GetNftByNftIndex (ReqGetNft) returns (NftEntity)
	
	@doc "Get nft_index of a nft by txHash"
	@handler GetNftByTxHash
	get /api/v1/getNftByTxHash (ReqGetNftIndex) returns (NftIndex)
	
	@doc "update nft metadata by nft_index"
	@handler UpdateNftByIndex
	post /api/v1/updateNftByIndex (ReqUpdateNft) returns (History)
	
	@doc "Get nft next nonce"
	@handler GetNftNextNonce
	get /api/v1/nftNextNonce (ReqGetNftNextNonce) returns (NextNonce)
}